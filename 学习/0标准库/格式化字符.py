#!/usr/bin/env python
# -*- coding:utf-8 -*-

##############################################################################
##############################################################################
############################      %方法      ############################

dic = {'name': '孟令珂', 'age': 24, 'sex': 'male'}
print('姓名：%(name)s，性别：%(sex)s，年龄：%(age)d' % dic)
print('姓名：%(name)+10s，性别：%(sex)-10s，年龄：%(age)05d' % dic)

# %[(name)][flags][width].[precision]typecod
# (name) 可选，用于选择指定的key
# flags 可选，可供选择的值有：
#     +       右对齐；正数前加正号，负数前加负号
#     -       左对齐；正数前无符号，负数前加负号
#     空格    右对齐；正数前加空格，负数前加负号
#     0       右对齐；正数前无符号，负数前加负号；用0填充空白处
# width 可选，占有宽度
# .precision 可选，小数位数
# typecode 必选
# s 字符串，采用str()显示
print('%%s：%s' % '  sdf fsds!!')
# r 字符串，采用repr()显示
print('%%r：%r' % '  sdf fsds!!')

# b 二进制整数（似乎不能用），o 八进制整数，d 十进制整数，i 十进制整数，x 十六进制整数
print('225的各种进制：\n八进制：0o%o\n十进制：%d\n十进制：%i\n十六进制：0x%x' % (225, 225, 225, 225))

# f或F 浮点数
print('%%f = %f' % 1)

# e或E 指数，基底写为e或E
print('%%e = %e' % 255)

# g或G 指数e或浮点数，根据显示长度确定
print('%%g25555555555 = %g' % 25555555555)
print('%%g2.5555555555 = %g' % 2.5555555555)

# c 单个字符，整数，转换为Unicode对应的值
print('unicode(152) = %c' % 152)

# * 动态带入格式，可用于width和precision
print('%%0*.*f(10, 3, 2.66666666) = %0*.*f' % (10, 3, 2.66666666))

##############################################################################
##############################################################################
############################      format方式      ############################
# [[fill]align][sign][#][0][width][,][.precision][type]
# fill 可选，空白处填充字符
# align 可选，对齐方式（需配合width使用）
# < 内容左对齐
# > 内容右对齐（默认）
# = 内容右对齐，将符号放置在填充字符的左侧，仅对数字有效，“符号 + 填充物 + 数字”
# ^ 内容居中
# sign 可选，有无符号数字
# +       正数加正号，负数加负号
# -       正数无符号，负数加负号
# 空格    正数加空格，负数加负号
# # 可选，对于二进制、八进制、十六进制，如果加上#，会显示 0b/0o/0x，否则不显示
# , 添加分隔符，如1,000,000
# width 可选，占有宽度
# .precision 可选，小数位数
# type 可选，格式化类型
# 字符串类型
# s       格式化字符串
# 空白    未指定类型，默认None，同s
print('使用s：---{:s}---'.format('faq'))
print('留空：---{:}---'.format('faq'))

# 整数类型
# b 转换为二进制并格式化
print('使用b：---{:b}---'.format(255))
print('使用#b：---{:#b}---'.format(255))
# c 转换为Unicode字符
print('使用c：---{:c}---'.format(8))
# d 十进制
print('使用d：---{:d}---'.format(255))
# o 转换为八进制并格式化
print('使用o：---{:o}---'.format(255))
print('使用#o：---{:#o}---'.format(255))
# x或X 转换为十六进制并格式化
print('使用x：---{:x}---'.format(255))
print('使用#X：---{:#X}---'.format(255))

# 浮点类型
# e或E 转换为科学计数法并格式化
print('使用e：---{:e}---'.format(2.222222))
print('使用E：---{:E}---'.format(4564648))
# f或F 转换为浮点类型（默认6位小数）并格式化
print('使用f：---{:.8f}---'.format(5))
# g或G 在e和f，E和F中切换
print('使用g：---{:g}---'.format(2.3658e2))
# % 显示百分比（默认6位小数）
print('使用%：---{:%}---'.format(5.215987445))

# fill，align，width
print('*<20：---{:*<20}---'.format('faq'))
print('*^20：---{:*^20}---'.format('faq'))
print('*>20：---{:*>20}---'.format('faq'))
# 分隔符 ,
print('分隔符：---{:,}---'.format(789453435.12348654))

##############################################################################
##############################################################################
##########################      更多format实例      ##########################
print('\n\n更多format实例：\n')

human1 = {'name': '孟令珂', 'sex': '男', 'age': 24, 'work': '事业编', 'pay': 3030}
print('我叫{name:s}，性别{sex:s}，{age:d}岁，工作是{work:s}，月收入{pay:.2f}'.format(**human1))
dic = []
dic.append(human1)
print(
    '我叫{name:s}，性别{sex:s}，{age:d}岁，工作是{work:s}，月收入{pay:.2f}'.format(**dic[0]))
print('format(**字典、映射)')
