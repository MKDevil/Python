
python中的内置对象（核心数据类型）
    对象类型                    例子 常量/创建
    数字                        123, 123423
    字符串                      '123', 'sdf'
    列表                        [1,[2,'fuck'],6]
    字典                        {'food':'spam','spices':'pepper'}
    元组                        (1,'123','sdf',24)
    文件                        myfile=open('sdf','r')
    集合                        set('abc'),{'a','b','c'}
    其他类型                    类型、None、布尔型
    编程单元类型                 函数、模块、类
    与现实相关的类型             编译的代码堆栈跟踪
    ……


1.数字
    数学模块 import math
        pi：圆周率
        sqrt()：开方
    随机模块 import random
        random()
        random.choice(1,2,3,4)
2.字符串''
    可以通过类似于数组的模式，读取指定位置的字符
        Name[Num]
    反向索引
        Name[Num]
        Num从-1开始
        Name[-1]与Name[len(Name)-1]都是获取字符串的最后一个数据
    分片索引
        Name[Num1:Num2]
        在Name中，索引从Num1位置开始，到Num2位置结束的字符串（不包括Num2位置的字符），返回一个新的字符串

    合并字符串
        Name1+Name2
3.列表[]
    可以使用字符串的大部分操作

    添加项目，在结尾
        Name.append()
    添加项目，指定偏移
        Name.insert(偏移,项目)
    删除项目，指定内容
        Name.remove()
    删除项目，指定偏移
        Name.pop()
    排序，升序
        Name.sort()
    翻转顺序
        Name.reverse()
    “多维数组”
        Name[[1,2,3],[4,5,6],[7,8,9]]
        调用Name[偏移1][偏移2]
4.字典{}
    字典实际上是一种映射
    通过Name['键']获取键值
5.元组()
    不可改变
6.文件

7.类class
    定义方法
        def 方法名称(self,参数)
    私有方法或私有变量的定义
        __方法名/变量名

