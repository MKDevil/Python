#!/usr/bin/env python
# -*- coding:utf-8 -*-


# 示例一，函数传入可变参数的几个问题-------------------------------------------
def change(a, b):
    """
    两种传递参数的方式：
    1.不可变对象作参数，通过“值”进行传递
    2.可变对象作参数，通过“指针”进行传递。如果在函数中，对不可变参数进行了原处修改（如append），其全局对象也会改变
    """
    a = 2
    b[0] = 'spam'


x = 1
y = [1, 2]
change(x, y)
print(x, y)

# 这是由于可变对象与不可变对象，在赋值时的方式不同引起的
x = 1
y = x
y = 2
print(x, y)
print('两个对象引用了同一个简单变量，赋值语句即为简单的赋值！')
x = [1, 2]
y = x
y[0] = 'spam'
print(x, y)
print('两个对象引用了一个复杂变量，赋值语句为“指针”含义，x与y都指向同一个内存地址')


# 如果想要避免上面情况的出现，可以通过复制方法进行参数的传递
def change(a):
    a[0] = 'spam'
x = [1, 2]
change(x[:])
# 或者在函数内部进行拷贝
def change(a):
    a = a[:]
x = [1, 2]
change(x)
# 或者将数据转换为不可变独享（如元组）（不推荐使用）
change(tuple(x))
