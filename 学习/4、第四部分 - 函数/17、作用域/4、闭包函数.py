#!/usr/bin/env python
# -*- coding:utf-8 -*-

# -----------------------------------------------------------------------------
# 示例一、闭包函数，在外部函数设定环境变量
x = 100


def fun1():
    """
    在外部函数中设置环境变量 x
    fun1() 在运行时，给对象 a 返回一个函数 fun2()
    同时将 x = 200 作为环境变量绑定到 a 内
    """
    x = 200

    def fun2():
        y = x + 1
        return y
    return fun2


a = fun1()
print(a())
print('x的当前值为：', x)

# -----------------------------------------------------------------------------
# 示例二、闭包函数，不设定环境变量
x = 100


def fun1():
    """
    fun2() 会按照 LEGB 法则，向上寻找变量 x，在全局作用域里获取变量 x = 100
    """
    def fun2():
        y = x + 1
        return y
    return fun2


a = fun1()
print(a())
print('x的当前值为：', x)

# -----------------------------------------------------------------------------
# 示例三、闭包函数，使用全局变量 global
x = 100


def fun1():
    """
    global 声明 x 为全局变量，自动从全局作用域获取变量 x = 100
    同时在 x 修改后，全局作用域的 x 的值也会被修改
    """
    def fun2():
        global x
        x = x + 1
        return x
    return fun2


a = fun1()
print(a())
print('x的当前值为：', x)
