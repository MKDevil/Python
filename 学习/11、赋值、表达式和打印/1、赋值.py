#!/usr/bin/env python
# -*- coding:utf-8 -*-

# 变量命名：（下划线或字母） + （任意数量的字母、数字或下滑线）

# 命名惯例：
# 1、以单一下划线开头的变量名 _X 不会被 from module import * 语句导入
# 2、前后有下划线的变量名 __X__ 是系统定义的变量名，对解释器有特殊意义
# 3、以两下划线开头、但结尾没有两个下划线的变量名 __X 是类的本地（压缩）变量
# 4、通过“交互模式”运行时，只有单个下划线的变量名 _ 会保存最后的表达式的结果

# 赋值语句建立的是引用，指向被引用的对象
# 变量名在首次赋值时会被创建
# 变量在引用前必须创建

s1 = 'spam'  # 基本形式
i1, i2 = 1, 2  # 元组赋值运算（位置性）
[s1, s2] = ['spam', 'SPAM']  # 列表赋值运算（位置性）
a, b, c, d = 'spam'  # 序列赋值运算（通用性），结果 a = 's', b = 'p', c = 'a', d = 'm'
a, *b, c = 'spam'  # 扩展的序列解包，结果 a = 's', b = ['p', 'a'], c = 'm'
s1 = s2 = 'spam'  # 多目标赋值运算，将指向同一个指针（内存空间）
i1 += 45  # 增强赋值运算

# 交换两个变量的值
s1 = 'spam'
s2 = 'ham'
s1, s2 = s2, s1
print(s1, s2)
